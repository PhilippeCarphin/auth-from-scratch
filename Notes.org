#+TITLE: Notes from the tutorial

* Prerequisites

** Leiningen

Some kind of build tool.  It can be installed with =brew install leiningen=.
* Initialize the project

Run
#+begin_src sh
lein new app <name>
#+end_src
which is how this directory was created with the following files:

#+begin_src
CHANGELOG.md
LICENSE
README.md
doc
project.clj
resources
src
test
#+end_src

* Hello world web app

Add =ring= as a dependency in =project.clj=.

Modify =core.clj=:
- Import ring with =require=
- Change main to call a ring function to which we pass a function.
  We also give it a port which is 8080 in this case.
- This function =app-handler= returns a map which is our HTML response.
  
Now we can do =lein run= and go to =localhost:8080= and see the HTML returned by
our app.

* Adding routes

Add =compojure= as a dependency.

Import =compojure.core= and =compojure.route=.

Instead of defining a function =app-handler= as a regular function, define =app=
using the =defroutes= macro.

Use =app= in the call to =run-jetty=.

Now we can go to =localhost:8080= and =localhost:8080/other= and see different
HTML.





* Stuff I installed

- =brew install leiningen=

** Straight clojure

While installing leiningen with brew did do everything I needed and seemed to
come with its JVM, while working on this tutorial, I went back to the basics to
do a plain clojure tutorial.

It told me to do =brew install clojure/tools/clojure= which would give me the
command =clj=.  When I did run that command, I got a message

#+begin_src
The operation couldnâ€™t be completed. Unable to locate a Java Runtime.
Please visit http://www.java.com for information on installing Java.
#+end_src

Also it is interesting that MacOS comes with =/usr/bin/java= which also prints
that message.
